-- Test Setup: ManyFieldsSeveralChunks
-- SQL: SELECT * from h2o;
-- Results After Sorting
+---------+------------+-------+------+--------------------------------+
| city    | other_temp | state | temp | time                           |
+---------+------------+-------+------+--------------------------------+
| Andover | 72.4       | CA    |      | 1970-01-01T00:00:00.000000150Z |
| Andover |            | CA    | 67.3 | 1970-01-01T00:00:00.000000500Z |
| Boston  | 68.2       | MA    |      | 1970-01-01T00:00:00.000000450Z |
| Boston  | 80.0       | MA    |      | 1970-01-01T00:00:00.000000250Z |
| Boston  |            | MA    | 70.4 | 1970-01-01T00:00:00.000000050Z |
| Boston  |            | MA    | 80.7 | 1970-01-01T00:00:00.000000350Z |
| Boston  |            | MA    | 88.6 | 1970-01-01T00:00:00.000000230Z |
+---------+------------+-------+------+--------------------------------+
-- SQL: EXPLAIN SELECT * from h2o;
-- Results After Normalizing UUIDs
----------
| plan_type    | plan    |
----------
| logical_plan    | TableScan: h2o projection=[city, other_temp, state, temp, time]    |
| physical_plan    | UnionExec    |
|    |   ParquetExec: file_groups={1 group: [[1/1/1/00000000-0000-0000-0000-000000000000.parquet]]}, projection=[city, other_temp, state, temp, time], output_ordering=[city@0 ASC, state@2 ASC, time@4 ASC]    |
|    |   ProjectionExec: expr=[city@1 as city, other_temp@2 as other_temp, state@3 as state, temp@4 as temp, time@5 as time]    |
|    |     DeduplicateExec: [city@1 ASC,state@3 ASC,time@5 ASC]    |
|    |       SortPreservingMergeExec: [city@1 ASC,state@3 ASC,time@5 ASC,__chunk_order@0 ASC]    |
|    |         ParquetExec: file_groups={3 groups: [[1/1/1/00000000-0000-0000-0000-000000000001.parquet], [1/1/1/00000000-0000-0000-0000-000000000002.parquet], [1/1/1/00000000-0000-0000-0000-000000000003.parquet]]}, projection=[__chunk_order, city, other_temp, state, temp, time], output_ordering=[city@1 ASC, state@3 ASC, time@5 ASC, __chunk_order@0 ASC]    |
|    |   ProjectionExec: expr=[city@1 as city, other_temp@2 as other_temp, state@3 as state, temp@4 as temp, time@5 as time]    |
|    |     DeduplicateExec: [city@1 ASC,state@3 ASC,time@5 ASC]    |
|    |       SortExec: expr=[city@1 ASC,state@3 ASC,time@5 ASC,__chunk_order@0 ASC]    |
|    |         RecordBatchesExec: chunks=1    |
|    |    |
----------
-- SQL: select temp, other_temp, time from h2o;
-- Results After Sorting
+------+------------+--------------------------------+
| temp | other_temp | time                           |
+------+------------+--------------------------------+
| 67.3 |            | 1970-01-01T00:00:00.000000500Z |
| 70.4 |            | 1970-01-01T00:00:00.000000050Z |
| 80.7 |            | 1970-01-01T00:00:00.000000350Z |
| 88.6 |            | 1970-01-01T00:00:00.000000230Z |
|      | 68.2       | 1970-01-01T00:00:00.000000450Z |
|      | 72.4       | 1970-01-01T00:00:00.000000150Z |
|      | 80.0       | 1970-01-01T00:00:00.000000250Z |
+------+------------+--------------------------------+
-- SQL: EXPLAIN select temp, other_temp, time from h2o;
-- Results After Normalizing UUIDs
----------
| plan_type    | plan    |
----------
| logical_plan    | Projection: h2o.temp, h2o.other_temp, h2o.time    |
|    |   TableScan: h2o projection=[other_temp, temp, time]    |
| physical_plan    | UnionExec    |
|    |   ParquetExec: file_groups={1 group: [[1/1/1/00000000-0000-0000-0000-000000000000.parquet]]}, projection=[temp, other_temp, time]    |
|    |   ProjectionExec: expr=[temp@3 as temp, other_temp@4 as other_temp, time@5 as time]    |
|    |     DeduplicateExec: [city@1 ASC,state@2 ASC,time@5 ASC]    |
|    |       SortPreservingMergeExec: [city@1 ASC,state@2 ASC,time@5 ASC,__chunk_order@0 ASC]    |
|    |         ParquetExec: file_groups={3 groups: [[1/1/1/00000000-0000-0000-0000-000000000001.parquet], [1/1/1/00000000-0000-0000-0000-000000000002.parquet], [1/1/1/00000000-0000-0000-0000-000000000003.parquet]]}, projection=[__chunk_order, city, state, temp, other_temp, time], output_ordering=[city@1 ASC, state@2 ASC, time@5 ASC, __chunk_order@0 ASC]    |
|    |   ProjectionExec: expr=[temp@3 as temp, other_temp@4 as other_temp, time@5 as time]    |
|    |     DeduplicateExec: [city@1 ASC,state@2 ASC,time@5 ASC]    |
|    |       SortExec: expr=[city@1 ASC,state@2 ASC,time@5 ASC,__chunk_order@0 ASC]    |
|    |         RecordBatchesExec: chunks=1    |
|    |    |
----------
-- SQL: EXPLAIN SELECT * from h2o where time >= to_timestamp('1970-01-01T00:00:00.000000250+00:00');
-- Results After Normalizing UUIDs
----------
| plan_type    | plan    |
----------
| logical_plan    | TableScan: h2o projection=[city, other_temp, state, temp, time], full_filters=[h2o.time >= TimestampNanosecond(250, None)]    |
| physical_plan    | UnionExec    |
|    |   CoalesceBatchesExec: target_batch_size=8192    |
|    |     FilterExec: time@4 >= 250    |
|    |       RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1    |
|    |         ParquetExec: file_groups={1 group: [[1/1/1/00000000-0000-0000-0000-000000000000.parquet]]}, projection=[city, other_temp, state, temp, time], output_ordering=[city@0 ASC, state@2 ASC, time@4 ASC], predicate=time@4 >= 250, pruning_predicate=time_max@0 >= 250    |
|    |   ProjectionExec: expr=[city@1 as city, other_temp@2 as other_temp, state@3 as state, temp@4 as temp, time@5 as time]    |
|    |     DeduplicateExec: [city@1 ASC,state@3 ASC,time@5 ASC]    |
|    |       SortPreservingMergeExec: [city@1 ASC,state@3 ASC,time@5 ASC,__chunk_order@0 ASC]    |
|    |         CoalesceBatchesExec: target_batch_size=8192    |
|    |           FilterExec: time@5 >= 250    |
|    |             SortPreservingRepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=2    |
|    |               ParquetExec: file_groups={2 groups: [[1/1/1/00000000-0000-0000-0000-000000000001.parquet], [1/1/1/00000000-0000-0000-0000-000000000002.parquet]]}, projection=[__chunk_order, city, other_temp, state, temp, time], output_ordering=[city@1 ASC, state@3 ASC, time@5 ASC, __chunk_order@0 ASC], predicate=time@4 >= 250, pruning_predicate=time_max@0 >= 250    |
|    |   ProjectionExec: expr=[city@1 as city, other_temp@2 as other_temp, state@3 as state, temp@4 as temp, time@5 as time]    |
|    |     DeduplicateExec: [city@1 ASC,state@3 ASC,time@5 ASC]    |
|    |       SortPreservingMergeExec: [city@1 ASC,state@3 ASC,time@5 ASC,__chunk_order@0 ASC]    |
|    |         SortExec: expr=[city@1 ASC,state@3 ASC,time@5 ASC,__chunk_order@0 ASC]    |
|    |           CoalesceBatchesExec: target_batch_size=8192    |
|    |             FilterExec: time@5 >= 250    |
|    |               RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1    |
|    |                 RecordBatchesExec: chunks=1    |
|    |    |
----------